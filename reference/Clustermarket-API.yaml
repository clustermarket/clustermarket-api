openapi: 3.1.0
info:
  title: Clustermarket API
  version: 0.1.1
  summary: The external API for Clustermarket.
  description: |-
    # Important Concepts

    ## Account

    An account in Clustermarket represents an organisation, department or a lab. We have a hierarchical strucure following these rules:
    * An organisation can have many departments and many labs.
    * A department may only have labs.
    * A lab can exist by itself, without a department or an organisation. We refer to these as independent labs.

    ```mermaid
    graph TD
        org[Organisation]
        dep1[Department]
        dep2[Department]
        org-->dep1
        dep1-->lab1[Lab]
        dep1-->lab2[Lab]
        org-->dep2
        dep2-->lab3[Lab]
        il[Independent Lab]
    ```
  termsOfService: 'https://www.clustermarket.com/terms'
  contact:
    name: Support
    email: support@clustermarket.com
  license:
    name: Proprietary
    url: 'https://www.clustermarket.com/terms'
servers:
  - url: 'https://api.clustermarket.com/v1'
    description: Production
  - url: 'https://api.staging.clustermarket.com/v1'
    description: Staging
paths:
  /bookings:
    get:
      summary: List Bookings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                minItems: 1
                uniqueItems: true
                x-examples:
                  example-1:
                    - id: 6373
                      asset_id: 7568
                    - id: 6374
                      asset_id: 7569
                    - id: 6375
                      asset_id: 7570
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    equipment_id:
                      type: integer
                  required:
                    - id
                    - equipment_id
              examples:
                example-1:
                  value:
                    - id: 1
                      equipment_id: 100
        '403':
          description: Forbidden
      operationId: get-bookings
      description: 'Return lists of bookings accessible to the user, optionally scopable to the providing lab account. The application scope must include ''read_bookings''.'
      parameters:
        - schema:
            type: number
          in: query
          name: provider_account
          description: The parent lab account ID.
    parameters: []
  '/bookings/{id}':
    get:
      summary: Booking Details
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Booking.yaml
              examples: {}
        '403':
          description: Forbidden
      operationId: 'get-bookings-:id'
      description: Return the details about a particular booking as defined by the database identifier. The application scope must include `read_bookings`.
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: Booking ID
  /equipment:
    get:
      summary: List Equipment
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                minItems: 1
                uniqueItems: true
                x-examples:
                  example-1:
                    - id: 7576
                      name: Subatomic NMR Spectrometer
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                      minLength: 1
                  required:
                    - id
                    - name
              examples:
                example-1:
                  value:
                    - id: 1
                      name: NMR
        '403':
          description: Forbidden
      operationId: get-equipment
      description: Lists all equipment under the specified lab.
      parameters:
        - schema:
            type: number
          in: query
          name: account
          description: The target lab account ID
    parameters: []
  '/equipment/{id}':
    get:
      summary: Equipment Details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Equipment.yaml
        '403':
          description: Forbidden
      operationId: 'get-equipment-:id'
      description: 'Returns details about a particular piece of equipment. Requires the equipment ID, and the application scope must include `read_equipment`.'
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: Equipment ID
  /accounts:
    parameters: []
    get:
      summary: List Account
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
      operationId: get-accounts
      description: Lists all accounts accessilbe through the integration.
  '/accounts/{id}':
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: Account ID
    get:
      summary: Account Details
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Account.yaml
      operationId: 'get-accounts-:id'
      description: Get the full details of a specific account.
components:
  schemas: {}
  securitySchemes:
    APIKey-production:
      type: oauth2
      flows:
        authorizationCode:
          scopes:
            read_equipment: Read Access to Equipment
            read_bookings: Read Access to Bookings
          authorizationUrl: 'https://app.clustermarket.com/oauth/authorize'
          tokenUrl: 'https://app.clustermarket.com/oauth/token'
      description: ''
    APIKey-staging:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://staging.clustermarket.com/oauth/authorize'
          tokenUrl: 'https://staging.clustermarket.com/oauth/token'
          scopes:
            read_equipment: Read Access to Equipment
            read_bookings: Read Access to Bookings
      description: ''
  responses: {}
security:
  - API Key:
      - read_equipment
      - read_bookings
