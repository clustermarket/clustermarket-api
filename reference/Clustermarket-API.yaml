openapi: 3.0.0
info:
  title: Clustermarket API
  version: 0.1.2
  description: |-
    # Important Concepts

    ## Account

    An account in Clustermarket represents an organisation, department or a lab. We have a hierarchical strucure following these rules:
    * An organisation can have many departments and many labs.
    * A department may only have labs.
    * A lab can exist by itself, without a department or an organisation. We refer to these as independent labs.

    ```mermaid
    graph TD
        org[Organisation]
        dep1[Department]
        dep2[Department]
        org-->dep1
        dep1-->lab1[Lab]
        dep1-->lab2[Lab]
        org-->dep2
        dep2-->lab3[Lab]
        il[Independent Lab]
    ```
  termsOfService: 'https://www.clustermarket.com/terms'
  contact:
    name: Support
    email: support@clustermarket.com
  license:
    name: Proprietary
    url: 'https://www.clustermarket.com/terms'
servers:
  - url: 'https://api.clustermarket.com/v1'
    description: Production
  - url: 'https://api.staging.clustermarket.com/v1'
    description: Staging
paths:
  /bookings:
    get:
      summary: List Bookings
      operationId: list-bookings
      description: 'Return lists of bookings accessible to the user, optionally scopable to the providing lab account. The application scope must include ''read_bookings''.'
      parameters:
        - schema:
            type: number
          in: query
          name: provider_account
          description: The parent lab account ID.
      tags:
        - bookings
      responses:
        '200':
          $ref: '#/components/responses/200-Booking-List'
        '400':
          $ref: '#/components/responses/400-Bad-Request'
        '401':
          $ref: '#/components/responses/401-Unauthorised'
        '403':
          $ref: '#/components/responses/403-Forbidden'
        '500':
          $ref: '#/components/responses/500-Internal-Server-Error'
    parameters: []
  '/bookings/{id}':
    get:
      summary: Booking Details
      tags:
        - bookings
      responses:
        '200':
          $ref: '#/components/responses/200-Booking'
        '400':
          $ref: '#/components/responses/400-Bad-Request'
        '401':
          $ref: '#/components/responses/401-Unauthorised'
        '403':
          $ref: '#/components/responses/403-Forbidden'
        '404':
          $ref: '#/components/responses/404-Not-Found'
        '500':
          $ref: '#/components/responses/500-Internal-Server-Error'
      operationId: get-booking
      description: Return the details about a particular booking as defined by the database identifier. The application scope must include `read_bookings`.
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: Booking ID
  /equipment:
    get:
      summary: List Equipment
      tags:
        - equipment
      responses:
        '200':
          $ref: '#/components/responses/200-Equipment-List'
        '400':
          $ref: '#/components/responses/400-Bad-Request'
        '401':
          $ref: '#/components/responses/401-Unauthorised'
        '403':
          $ref: '#/components/responses/403-Forbidden'
        '404':
          $ref: '#/components/responses/404-Not-Found'
        '500':
          $ref: '#/components/responses/500-Internal-Server-Error'
      operationId: list-equipment
      description: Lists all equipment under the specified lab.
      parameters:
        - schema:
            type: number
          in: query
          name: account
          description: The target lab account ID
    parameters: []
  '/equipment/{id}':
    get:
      summary: Equipment Details
      responses:
        '200':
          $ref: '#/components/responses/200-Equipment'
        '400':
          $ref: '#/components/responses/400-Bad-Request'
        '401':
          $ref: '#/components/responses/401-Unauthorised'
        '403':
          $ref: '#/components/responses/403-Forbidden'
        '404':
          $ref: '#/components/responses/404-Not-Found'
        '500':
          $ref: '#/components/responses/500-Internal-Server-Error'
      operationId: get-equipment
      description: 'Returns details about a particular piece of equipment. Requires the equipment ID, and the application scope must include `read_equipment`.'
      tags:
        - equipment
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: Equipment ID
  /accounts:
    parameters: []
    get:
      summary: List Accounts
      tags:
        - accounts
      responses:
        '200':
          $ref: '#/components/responses/200-Account-List'
        '400':
          $ref: '#/components/responses/400-Bad-Request'
        '401':
          $ref: '#/components/responses/401-Unauthorised'
        '403':
          $ref: '#/components/responses/403-Forbidden'
        '500':
          $ref: '#/components/responses/500-Internal-Server-Error'
      operationId: list-accounts
      description: Lists all accounts accessilbe through the integration.
  '/accounts/{id}':
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
        description: Account ID
    get:
      summary: Account Details
      tags:
        - accounts
      responses:
        '200':
          $ref: '#/components/responses/200-Account'
        '400':
          $ref: '#/components/responses/400-Bad-Request'
        '401':
          $ref: '#/components/responses/401-Unauthorised'
        '403':
          $ref: '#/components/responses/403-Forbidden'
        '404':
          $ref: '#/components/responses/404-Not-Found'
        '500':
          $ref: '#/components/responses/500-Internal-Server-Error'
      operationId: get-account
      description: Get the full details of a specific account.
components:
  schemas:
    Account:
      title: Account
      type: object
      description: 'Represents an organisation, department or lab.'
      properties:
        id:
          type: integer
          readOnly: true
        account_type:
          type: string
          enum:
            - organisation
            - department
            - lab
          default: lab
          example: lab
        sector:
          type: string
          enum:
            - academia
            - industry
        department:
          type: integer
        organisation:
          type: integer
        name:
          type: string
          example: Cambridge Graphene Center
        description:
          type: string
        website:
          type: string
          maxLength: 200
          example: 'https://www.graphene.cam.ac.uk/'
        timezone:
          type: string
          example: Europe/London
      required:
        - id
        - account_type
        - name
    Address:
      title: Address
      type: object
      properties:
        id:
          type: integer
        street:
          type: string
          description: Street level address
        city:
          type: string
          description: 'Settlement name ex: town, city.'
        postal_code:
          type: string
          description: Postal code in local format
        country:
          type: string
          description: ' ISO 3166 Alpha 3 code'
      required:
        - id
        - street
        - city
        - postal_code
        - country
      description: Represents an address.
    Booking:
      title: Booking
      type: object
      description: Equipment bookings
      properties:
        id:
          type: integer
        add_ons:
          type: string
          minLength: 1
        requester_organisation:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
              description: Account ID
            name:
              type: string
              minLength: 1
        provider_organisation:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
              description: Account ID
            name:
              type: string
              minLength: 1
        requester:
          type: object
          description: User who requested/made the booking.
          required:
            - id
            - name
          properties:
            id:
              type: integer
              description: User ID
            name:
              type: string
              minLength: 1
              description: 'User''s full name '
        status:
          type: string
          minLength: 1
        duration:
          type: number
        equipment:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
            name:
              type: string
              minLength: 1
        cost:
          type: string
          minLength: 1
        requester_lab:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
              description: Account ID
            name:
              type: string
              minLength: 1
        provider_lab:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
              description: Account ID
            name:
              type: string
              minLength: 1
        requester_group:
          type: object
          properties:
            name:
              type: string
              minLength: 1
        requested_at:
          type: string
          minLength: 1
        booking_type:
          type: string
          minLength: 1
      required:
        - id
        - requester_organisation
        - provider_organisation
        - requester
        - status
        - duration
        - equipment
        - cost
        - requester_lab
        - provider_lab
        - requested_at
        - booking_type
    Equipment:
      description: Represent an asset under the control of a lab
      type: object
      x-examples:
        example-1:
          id: 492
          name: Liquid Reflector
          category: ''
          manufacturer: Manufacturer
          model_number: '0001'
          city: Welchmouth
          charging_type: Per Hour
          currency: USD
          country: BQ
          room: Room 101
          lab:
            id: 103
            name: Materials Science Lab
          description: wowsa
      title: Equipment
      properties:
        id:
          type: integer
          description: Equipment ID
          readOnly: true
        name:
          type: string
          minLength: 1
          description: Equipment name
        category:
          type: string
        manufacturer:
          type: string
          minLength: 1
          description: Equipment Manufacturer Name
        model:
          type: string
          minLength: 1
          description: Equipment model name
        charging_type:
          type: string
          minLength: 1
        currency:
          type: string
          minLength: 1
        room:
          type: string
          minLength: 1
        lab:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
              description: Account ID
            name:
              type: string
              minLength: 1
              description: Laboratory name
        description:
          type: string
          minLength: 1
          description: Equipment description
      required:
        - id
        - name
        - manufacturer
        - model
        - charging_type
        - currency
        - lab
        - description
  securitySchemes:
    APIKey-production:
      type: oauth2
      flows:
        authorizationCode:
          scopes:
            read_equipment: Read Access to Equipment
            read_bookings: Read Access to Bookings
          authorizationUrl: 'https://app.clustermarket.com/oauth/authorize'
          tokenUrl: 'https://app.clustermarket.com/oauth/token'
      description: ''
    APIKey-staging:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://staging.clustermarket.com/oauth/authorize'
          tokenUrl: 'https://staging.clustermarket.com/oauth/token'
          scopes:
            read_equipment: Read Access to Equipment
            read_bookings: Read Access to Bookings
      description: ''
  responses:
    500-Internal-Server-Error:
      description: Internal server error. Retry your request. Use an exponential backoff or our servers may temporary block your client.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              error_description:
                type: string
    404-Not-Found:
      description: Requested resource not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              error_description:
                type: string
    403-Forbidden:
      description: Forbidden. You are either unauthorised to perform the requested operation or your application is unapproved.
      content:
        application/json:
          schema:
            type: object
      headers: {}
    401-Unauthorised:
      description: Unauthorised.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              error_description:
                type: string
    400-Bad-Request:
      description: Malformed request. Missing required parameters.
      content:
        application/json:
          schema:
            type: object
    200-Booking-List:
      description: Booking List
      content:
        application/json:
          schema:
            type: array
            description: ''
            minItems: 1
            uniqueItems: false
            x-examples:
              example-1:
                - id: 6373
                  asset_id: 7568
                - id: 6374
                  asset_id: 7569
                - id: 6375
                  asset_id: 7570
            items:
              type: object
              properties:
                id:
                  type: integer
                equipment_id:
                  type: integer
              required:
                - id
                - equipment_id
          examples: {}
    200-Booking:
      description: Booking Details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Booking'
          examples: {}
    200-Equipment-List:
      description: Equipment List
      content:
        application/json:
          schema:
            type: array
            description: ''
            minItems: 1
            uniqueItems: false
            x-examples:
              example-1:
                - id: 7576
                  name: Subatomic NMR Spectrometer
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                  minLength: 1
              required:
                - id
                - name
          examples:
            example-1:
              value:
                - id: 1
                  name: NMR
    200-Equipment:
      description: Equipment Details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Equipment'
    200-Account-List:
      description: Account List
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
    200-Account:
      description: Account Details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'
security:
  - API Key:
      - read_equipment
      - read_bookings
tags:
  - name: accounts
  - name: bookings
  - name: equipment
